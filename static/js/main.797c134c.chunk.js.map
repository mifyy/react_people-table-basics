{"version":3,"sources":["App.tsx","Pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","sex","slug","name","PeopleTable","people","personSlug","useParams","getPersonLink","parent","map","born","died","fatherName","motherName","find","per","PeoplePage","useState","setPeople","Error","setError","isLoading","setIsLoading","dataIsValid","setDataIsValid","useEffect","fetchData","data","length","createRoot","document","getElementById","render","path","element","index"],"mappings":"sQAKMA,EAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACtB,OAAOC,IAAG,cAAe,CAAE,8BAA+BD,GAC3D,EAEYE,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWJ,EACXM,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWJ,EACXM,GAAG,UAFL,2BAUN,sBAAMF,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UA7BW,ECTNG,EAAW,WACtB,OACE,oBAAIH,UAAU,QAAd,sBAEH,E,4BCFYI,G,MAAS,kBACpB,qBAAKJ,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOf,SAASK,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCJM,IAAMQ,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEf,UAAWF,IAAG,CAAE,kBAAmC,OAAV,OAANiB,QAAM,IAANA,OAAA,EAAAA,EAAQC,OAC3Cd,GAAE,yBAAaa,QAAb,IAAaA,OAAb,EAAaA,EAAQE,MAFzB,gBAIGF,QAJH,IAIGA,OAJH,EAIGA,EAAQG,MAGd,ECRYC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCC,EAAeC,cAAfD,WAEFE,EAAgB,SACpBR,EACAS,GAEA,OAAOT,EACF,cAAC,EAAD,CAAYA,OAAQA,IACrBS,GAAU,GACf,EAED,OACE,wBACE,UAAQ,cACRxB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGoB,EAAOK,KAAI,SAAAV,GACV,IACEC,EAMED,EANFC,IACAU,EAKEX,EALFW,KACAC,EAIEZ,EAJFY,KACAC,EAGEb,EAHFa,WACAC,EAEEd,EAFFc,WACAZ,EACEF,EADFE,KAGF,OACE,qBACE,UAAQ,SAERjB,UAAWF,IAAG,CAAE,yBAA0BmB,IAASI,IAHrD,UAKE,6BACGE,EAAcR,KAGjB,6BAAKC,IACL,6BAAKU,IACL,6BAAKC,IAEL,6BACGJ,EAAcH,EACZU,MAAK,SAAAC,GAAG,OAAIA,EAAIb,OAASW,CAAjB,IAA8BA,KAG3C,6BACGN,EAAcH,EACZU,MAAK,SAAAC,GAAG,OAAIA,EAAIb,OAASU,CAAjB,IAA8BA,OAlBtCX,EAsBV,QAIR,ECzEYe,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAA0BD,mBAAiB,IAA3C,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,oBAAkB,GAApD,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAsCL,oBAAkB,GAAxD,mBAAOM,EAAP,KAAoBC,EAApB,KAwBA,OAtBAC,qBAAU,WACR,IAAMC,EAAS,iDAAG,uHAEKrC,IAFL,QAERsC,EAFQ,SAIe,IAAhBA,EAAKC,QAIhBV,EAAUS,GACVH,GAAe,KAJfJ,EAAS,SACTI,GAAe,IANH,gDAYdJ,EAAS,SAZK,yBAcdE,GAAa,GAdC,4EAAH,qDAkBfI,GACD,GAAE,IAGD,qCACE,oBAAI1C,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqC,EAAY,cAAC,EAAD,IAAa,KAEf,UAAVF,GACC,mBAAG,UAAQ,qBAAqBnC,UAAU,kBAA1C,yDAKS,UAAVmC,GACC,mBAAG,UAAQ,kBAAX,8DAKDI,GAAe,cAAC,EAAD,CAAanB,OAAQA,WAK9C,EC9CDyB,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUhD,GAAG,QAC1C,cAAC,IAAD,CAAOiD,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,SAGtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIlD,UAAU,QAAd,qC","file":"static/js/main.797c134c.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | undefined;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={cn({ 'has-text-danger': person?.sex === 'f' })}\n      to={`/people/${person?.slug}`}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  const getPersonLink = (\n    person: Person | undefined,\n    parent?: string | null,\n  ) => {\n    return person\n      ? (<PersonLink person={person} />)\n      : parent || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({ 'has-background-warning': slug === personSlug })}\n            >\n              <td>\n                {getPersonLink(person)}\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {getPersonLink(people\n                  .find(per => per.name === motherName), motherName)}\n              </td>\n\n              <td>\n                {getPersonLink(people\n                  .find(per => per.name === fatherName), fatherName)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [Error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [dataIsValid, setDataIsValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getPeople();\n\n        if (!data || data.length === 0) {\n          setError('type1');\n          setDataIsValid(false);\n        } else {\n          setPeople(data);\n          setDataIsValid(true);\n        }\n      } catch (error) {\n        setError('type2');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader /> : null}\n\n          {Error === 'type1' && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              It seems there are no people on the server.\n            </p>\n          )}\n\n          {Error === 'type2' && (\n            <p data-cy=\"noPeopleMessage\">\n              Something went wrong while fetching people data.\n            </p>\n          )}\n\n          {dataIsValid && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Route, HashRouter, Routes, Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}